/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package WHO;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;

/**
 *
 * @author nojus
 */
public class NoahSec extends javax.swing.JFrame {
    
     private static final String USER_DATA_FILE = "user_data.txt";
  
    public NoahSec() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Title = new javax.swing.JLabel();
        UserID = new javax.swing.JTextField();
        PasswordField = new javax.swing.JPasswordField();
        Login = new javax.swing.JButton();
        Register = new javax.swing.JButton();
        Del = new javax.swing.JButton();
        BackB = new javax.swing.JButton();
        Background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Title.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        Title.setForeground(new java.awt.Color(255, 255, 255));
        Title.setText("User Login");
        getContentPane().add(Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 90, -1, -1));

        UserID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        UserID.setText("Enter UserID Here");
        UserID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserIDActionPerformed(evt);
            }
        });
        getContentPane().add(UserID, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 200, 200, -1));

        PasswordField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasswordFieldActionPerformed(evt);
            }
        });
        getContentPane().add(PasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 250, 200, -1));

        Login.setBackground(new java.awt.Color(204, 255, 204));
        Login.setText("Login");
        Login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginActionPerformed(evt);
            }
        });
        getContentPane().add(Login, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 320, -1, -1));

        Register.setBackground(new java.awt.Color(204, 255, 255));
        Register.setText("Register");
        Register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterActionPerformed(evt);
            }
        });
        getContentPane().add(Register, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 320, -1, -1));

        Del.setBackground(new java.awt.Color(255, 153, 153));
        Del.setText("Delete User");
        Del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelActionPerformed(evt);
            }
        });
        getContentPane().add(Del, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 320, -1, -1));

        BackB.setText("Back");
        BackB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBActionPerformed(evt);
            }
        });
        getContentPane().add(BackB, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 380, -1, -1));

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bkg.png"))); // NOI18N
        getContentPane().add(Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1300, 620));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void UserIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UserIDActionPerformed

    private void PasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasswordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PasswordFieldActionPerformed

    private void DelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DelActionPerformed
        // TODO add your handling code here:
    String enteredUserID = UserID.getText();
    try (BufferedReader reader = new BufferedReader(new FileReader(USER_DATA_FILE))) {
        StringBuilder newData = new StringBuilder();
        String line;
        boolean userFound = false;

        while ((line = reader.readLine()) != null) {
            String[] userData = line.split(",");
            String storedUserID = userData[0];

            if (!enteredUserID.equals(storedUserID)) {
               
                newData.append(line).append("\n");
            } else {
                userFound = true;
            }
        }      if (!userFound) {          
            JOptionPane.showMessageDialog(this, "User not found!", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            try (BufferedWriter writer = new BufferedWriter(new FileWriter(USER_DATA_FILE))) {
                writer.write(newData.toString());
            }
            JOptionPane.showMessageDialog(this, "User deletion successful!", "Success", JOptionPane.INFORMATION_MESSAGE);
        }
    } catch (IOException e) {
        e.printStackTrace();
    }
    }//GEN-LAST:event_DelActionPerformed

    private void BackBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBActionPerformed

                NoahSec frm1 = new NoahSec();
        Landing frm2 = new Landing();
        frm2.setVisible(true);
        frm1.setVisible(false);
        dispose();

    }//GEN-LAST:event_BackBActionPerformed

    private void LoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginActionPerformed
 String enteredUserID = UserID.getText();
 String enteredPassword = new String(PasswordField.getPassword());

        if (validateLogin(enteredUserID, enteredPassword)) {
            NoahSec frm1 = new NoahSec();
            Calculator frm2 = new Calculator();
            frm2.setVisible(true);
            frm1.setVisible(false);
            dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Invalid Login", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
     private boolean validateLogin(String enteredUserID, String enteredPassword) {
    try (BufferedReader reader = new BufferedReader(new FileReader(USER_DATA_FILE))) {
        String line;
        while ((line = reader.readLine()) != null) {
            String[] userData = line.split(",");
            String storedUserID = userData[0];
            String storedPassword = userData[1];

            if (enteredUserID.equals(storedUserID) && enteredPassword.equals(storedPassword)) {
                return true;
            }
        }
    } catch (IOException e) {
        e.printStackTrace();
    }   return false;
        // TODO add your handling code here:
    }//GEN-LAST:event_LoginActionPerformed

    private void RegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterActionPerformed
 String enteredUserID = UserID.getText();
 String enteredPassword = new String(PasswordField.getPassword());

        try (BufferedWriter writer = new BufferedWriter(new FileWriter(USER_DATA_FILE, true))) {
            writer.write(enteredUserID + "," + enteredPassword);
            writer.newLine();

            JOptionPane.showMessageDialog(this, "Registration successful!", "Success", JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException e) {
            e.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_RegisterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NoahSec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NoahSec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NoahSec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NoahSec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NoahSec().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackB;
    private javax.swing.JLabel Background;
    private javax.swing.JButton Del;
    private javax.swing.JButton Login;
    private javax.swing.JPasswordField PasswordField;
    private javax.swing.JButton Register;
    private javax.swing.JLabel Title;
    private javax.swing.JTextField UserID;
    // End of variables declaration//GEN-END:variables
}
